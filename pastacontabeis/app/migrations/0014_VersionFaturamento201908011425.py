# Generated by Django 2.2.5 on 2020-02-18 17:39

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0013_VersionFaturamento201907301212'),
    ]

    operations = [
        migrations.RunSQL("""CREATE TABLE faturamento.regua_cobranca
                     (
                         regua_cobranca uuid NOT NULL DEFAULT uuid_generate_v4(),
                         codigo character varying(60) NOT NULL,
                         descricao character varying(160),
                         tenant bigint NOT NULL,
                         padrao boolean,
                         CONSTRAINT regua_cobranca_pk PRIMARY KEY(regua_cobranca)
                     )
                     """, ""),
        migrations.RunSQL("""CREATE TABLE faturamento.regua_estabelecimento
                          (
                              regua_estabelecimento uuid NOT NULL DEFAULT uuid_generate_v4(),
                              regua_cobranca uuid NOT NULL,
                              estabelecimento character varying(60),
                              CONSTRAINT regua_estabelecimento_pkey PRIMARY KEY(regua_estabelecimento),
                              CONSTRAINT regua_cobranca_fk FOREIGN KEY(regua_cobranca)
                              REFERENCES faturamento.regua_cobranca(regua_cobranca) MATCH SIMPLE
                              ON UPDATE CASCADE ON DELETE CASCADE
                          )
                          """, ""),
        migrations.RunSQL("""CREATE INDEX fki_regua_estabelecimento_fk
        ON faturamento.regua_estabelecimento
        USING btree
        (regua_cobranca);""", ""),
        migrations.RunSQL("""CREATE TABLE faturamento.regua_cobranca_etapa
                     (
                         regua_cobranca_etapa uuid NOT NULL DEFAULT uuid_generate_v4(),
                         regua_cobranca uuid NOT NULL,
                         descricao character varying(160) NOT NULL,
                         template_email character varying(160) NOT NULL,
                         prazo integer,
                         tenant bigint NOT NULL,
                         apos_vencimento boolean,
                         CONSTRAINT regua_cobranca_etapa_pkey PRIMARY KEY(regua_cobranca_etapa),
                         CONSTRAINT regua_cobranca_fk FOREIGN KEY(regua_cobranca)
                         REFERENCES faturamento.regua_cobranca(regua_cobranca) MATCH SIMPLE
                         ON UPDATE CASCADE ON DELETE CASCADE
                     )
                     """, ""),
        migrations.RunSQL("""CREATE INDEX fki_regua_cobranca_fk
                          ON faturamento.regua_cobranca_etapa
                          USING btree
                          (regua_cobranca)
                          """, ""),
        migrations.RunSQL("""CREATE TABLE faturamento.historico_cobranca
                          (
                              historico_cobranca uuid NOT NULL DEFAULT uuid_generate_v4(),
                              regua_cobranca_etapa uuid NOT NULL,
                              documento uuid NOT NULL,
                              data date NOT NULL,
                              CONSTRAINT historico_cobranca_pkey PRIMARY KEY(historico_cobranca),
                              CONSTRAINT regua_cobranca_etapa_fk FOREIGN KEY(regua_cobranca_etapa)
                              REFERENCES faturamento.regua_cobranca_etapa(regua_cobranca_etapa) MATCH SIMPLE
                              ON UPDATE CASCADE ON DELETE CASCADE
                          )
                          """, ""),
        migrations.RunSQL("""CREATE INDEX fki_historico_cobranca_fk
        ON faturamento.historico_cobranca
        USING btree
        (regua_cobranca_etapa);""", ""),
    ]
